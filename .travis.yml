language: rust

cache: cargo

matrix:
  include:
    # Linux 32bit
    - env: TARGET=i686-unknown-linux-gnu
      os: linux
      rust: nightly
      addons:
        apt:
          # Cross compiler and cross compiled C libraries
          packages: &i686_packages
            - gcc-multilib
    - env: TARGET=i686-unknown-linux-gnu
      os: linux
      rust: stable
      addons:
        apt:
          packages: *i686_packages
    - env: TARGET=i686-unknown-linux-gnu
      os: linux
      rust: 1.24.1
      addons:
        apt:
          packages: *i686_packages

    # Linux 64bit
    - env: TARGET=x86_64-unknown-linux-gnu
      os: linux
      rust: nightly
    - env: TARGET=x86_64-unknown-linux-gnu
      os: linux
      rust: stable
    - env: TARGET=x86_64-unknown-linux-gnu
      os: linux
      rust: 1.24.1

    # macOS
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: stable
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: 1.24.1

    # iOS
    - env: TARGET=x86_64-apple-ios
      os: osx
      rust: nightly
    - env: TARGET=x86_64-apple-ios
      os: osx
      rust: stable
    - env: TARGET=x86_64-apple-ios
      os: osx
      rust: 1.24.1

install:
  - rustup self update
  - rustup target add $TARGET; true

before_script:
  - |
      if [ "$TRAVIS_RUST_VERSION" == "1.24.1" ]; then
        # Some of winit's transitive dependencies have made semver-compatible releases that actually
        # break their compatibility with rust 1.24.1. We freeze them to their last compatible version to
        # ensure that winit still compiles fine on this rust version.
        cargo update
        cargo update -p stb_truetype --precise 0.2.2
        cargo update -p rusttype --precise 0.7.1
      fi

script:
  - cargo build --target $TARGET --verbose
  - cargo build --target $TARGET --features serde --verbose
  - cargo build --target $TARGET --features icon_loading --verbose
  # Running iOS apps on OSX requires the simulator so we skip that for now
  - if [ "$TARGET" != "x86_64-apple-ios" ]; then cargo test --target $TARGET --verbose; fi
  - if [ "$TARGET" != "x86_64-apple-ios" ]; then cargo test --target $TARGET --features serde --verbose; fi
  - if [ "$TARGET" != "x86_64-apple-ios" ]; then cargo test --target $TARGET --features icon_loading --verbose; fi

after_success:
  - |
      [ $TRAVIS_BRANCH = master ] &&
      [ $TRAVIS_PULL_REQUEST = false ] &&
      cargo publish --token ${CRATESIO_TOKEN}
